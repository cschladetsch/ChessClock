namespace {0:WidgetsNamespace}
{{
	/// <summary>
	/// ListView component for the {0:SourceClassShortName}.
	/// </summary>
	public partial class {0:ListViewComponentClass} : UIWidgets.ListViewItem, UIWidgets.IViewData<{0:SourceClass}>
	{{
		/// <summary>
		/// Init graphics foreground.
		/// </summary>
		protected override void GraphicsBackgroundInit()
		{{
			base.GraphicsBackgroundInit();

			if (CellsBackgroundVersion == 0)
			{{
				var result = new System.Collections.Generic.List<UnityEngine.UI.Graphic>();

				foreach (UnityEngine.Transform child in transform)
				{{
					var graphic = child.GetComponent<UnityEngine.UI.Graphic>();
					if (graphic != null)
					{{
						result.Add(graphic);
					}}
				}}

				if (result.Count > 0)
				{{
					cellsGraphicsBackground = result.ToArray();

					CellsBackgroundVersion = 1;
				}}
			}}
		}}

		/// <summary>
		/// Init graphics foreground.
		/// </summary>
		protected override void GraphicsForegroundInit()
		{{
			if (GraphicsForegroundVersion == 0)
			{{
				Foreground = new UnityEngine.UI.Graphic[] {{ {0:TextFields@UIWidgets.Utilities.GetGraphic([0:WidgetFieldName]), } }};
				if (!UIWidgets.UtilitiesCollections.AllNull(Foreground))
				{{
					GraphicsForegroundVersion = 1;
				}}
			}}
		}}
{0:Fields@
		/// <summary>
		/// The [0:FieldName].
		/// </summary>
		public [0:WidgetClass] [0:WidgetFieldName];
}
		/// <summary>
		/// Gets the current item.
		/// </summary>
		public {0:SourceClass} Item
		{{
			get;
			protected set;
		}}

		/// <summary>
		/// Remove current item.
		/// </summary>
		public void Remove()
		{{
			(Owner as {0:ListViewClass}).DataSource.RemoveAt(Index);
		}}

		/// <summary>
		/// Deselect current item.
		/// </summary>
		public void Deselect()
		{{
			Owner.Deselect(Index);
		}}

		/// <summary>
		/// Sets component data with specified item.
		/// </summary>
		/// <param name="item">Item.</param>
		public virtual void SetData({0:SourceClass} item)
		{{
			Item = item;{0:Fields@

			if ([0:WidgetFieldName] != null)
			[[
				[0:WidgetFieldName].[0:WidgetValueField] = Item.[0:FieldName][0:FieldFormat];
			]]}{0:ImageFieldsNullable@

			// set transparent color if no icon
			if ([0:WidgetFieldName] != null)
			[[
				[0:WidgetFieldName].color = ([0:WidgetFieldName].[0:WidgetValueField] == null) ? UnityEngine.Color.clear : UnityEngine.Color.white;
			]]}
		}}

		/// <summary>
		/// Called when item moved to cache, you can use it free used resources.
		/// </summary>
		public override void MovedToCache()
		{{{0:ImageFieldsNullable@
			if ([0:WidgetFieldName] != null)
			[[
				[0:WidgetFieldName].[0:WidgetValueField] = null;
			]]}
		}}
	}}
}}